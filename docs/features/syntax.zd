:title "Syntax"


:zendoc:keypaths md/

Zen document is a collection of keypathes and values.

```code clojure

  :title "Title"
  :date "2021-12-21"
  :section:intro "Value"
  :section:more "Value"
  :any-edn {:key "value"}

```

This will be compiled into:

```code clojure

  :title "Title"
  :date "2021-12-21"
  :section {:intro "Value" :more "Value"}

```

:zendoc:multiline md/

If keypath ends with `/` it is a multiline string:

```code clojure

  :summary md/
    Here is some text
    which is multiline

```

This will be compiled into:

```code clojure

{:summary "Here is some text\nwhich is multiline"}

```


:zendoc:annotations md/

Keypathes may be annotated with `^name params`.

```code clojure

  ^badge
  :author "ivan"

  ^img {:style "height:20px"}
  :image "/logo.png"

```

^badge
:author  "Ivan"
^img {:style "height:20px"}
:image "/logo.png"

:zentext md/

If multiline is md/ we render string with #features.zentext

```text
    * paragraphs
    * lists
    * inline links #
    * inline methods [[a github.com This is github]]
    * inline functions ((echo function))
    ```code yaml
       key: value
       key: value
    ```
```

Will produce >

* paragraphs
* lists
* inline links #
* inline methods [[a github.com This is github]]
* inline functions ((echo function))

```code yaml
key: value
key: value
```
